SubArray sum equals K:-
-----------------------
class Solution {
    public int subarraySum(int[] nums, int k) {
  int n=nums.length;
  int sum=0;
  int maxLen=0;
  HashMap<Integer,Integer>map=new HashMap<>();
  map.put(0,1);
  for(int i=0;i<n;i++){
    sum+=nums[i];
    if(map.containsKey(sum-k)){
        maxLen+=map.get(sum-k);
    }
        map.put(sum,map.getOrDefault(sum,0)+1);
    
  }
  return maxLen;
}
---------------------------------------------------------------------------
Sorted Colors:-
--------------
class Solution {
    public void sortColors(int[] nums) {
        int len=nums.length;
        int max=nums[0];
        for(int i=0;i<len-1;i++){
            for(int j=0;j<len-1;j++){
            if(nums[j]>nums[j+1]){
            int temp=nums[j];
            nums[j]=nums[j+1];
            nums[j+1]=temp;
            }
            }
        }
       
    }
}
--------------------------------------------------------------------------
